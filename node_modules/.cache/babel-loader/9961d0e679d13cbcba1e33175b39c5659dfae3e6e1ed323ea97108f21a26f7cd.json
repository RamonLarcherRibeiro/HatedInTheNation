{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"threeContainer\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"100vh\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","style","_createElementBlock","_hoisted_1"],"sources":["/home/ramon/repositorios/hatedinthenation/src/App.vue"],"sourcesContent":["<template>\n  <div ref=\"threeContainer\" style=\"width: 100%; height: 100vh;\"></div>\n</template>\n\n<script>\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\n\nexport default {\n  name: 'ThreeComponent',\n  mounted() {\n    const container = this.$refs.threeContainer;\n    if (!container) {\n      console.error('Element with ref \"threeContainer\" not found');\n      return;\n    }\n\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    container.appendChild(renderer.domElement);\n\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xdddddd);\n\n    const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 2000);\n    camera.position.set(800, 100, 1000);\n\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.update();\n\n    // Adicionando luzes Ã  cena\n    const light1 = new THREE.PointLight(0xc4c4c4, 1);\n    light1.position.set(0, 300, 500);\n    scene.add(light1);\n\n    const light2 = new THREE.PointLight(0xc4c4c4, 1);\n    light2.position.set(500, 100, 0);\n    scene.add(light2);\n\n    const light3 = new THREE.PointLight(0xc4c4c4, 1);\n    light3.position.set(0, 100, -500);\n    scene.add(light3);\n\n    const light4 = new THREE.PointLight(0xc4c4c4, 1);\n    light4.position.set(-500, 300, 500);\n    scene.add(light4);\n\n    // Carregando o modelo GLTF\n    const gltfLoader = new GLTFLoader();\n    gltfLoader.load('../assets/Bee_Gltf.glb', (gltf) => {\n      gltf.scene.scale.set(80, 80, 80);  // Ajuste a escala aqui\n      scene.add(gltf.scene);\n    }, undefined, (error) => {\n      console.error('An error occurred while loading the GLTF model:', error);\n    });\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n      controls.update();\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    window.addEventListener('resize', onWindowResize, false);\n    function onWindowResize() {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }\n};\n</script>\n\n<style scoped>\ndiv {\n  width: 100%;\n  height: 100%;\n}\n</style>\n"],"mappings":";;;EACOA,GAAG,EAAC,gBAAgB;EAACC,KAAmC,EAAnC;IAAA;IAAA;EAAA;;;uBAA1BC,mBAAA,CAAoE,OAApEC,UAAoE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}